{"version":3,"sources":["Components/Header/Header.js","Components/AddBoardButton/AddBoardButton.js","Components/EditField/EditField.js","Components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","AddBoardButton","props","onClick","e","onboardAdd","EditField","color","board","boardId","idx","data","items","cardDescription","date","useState","Date","startDate","setStartDate","newText","setNewText","deadline","moment","today","startOf","console","log","format","diff","valid","title","type","value","onChange","target","selected","newDate","minDate","onCancel","onSave","Board","id","priority","boards","setBoards","currentBoard","setCurrentBoard","currentItem","setCurrentItem","editElement","setEditElement","edit","setEdit","editInfo","setEditInfo","dragOverHandler","preventDefault","style","boxShadow","background","EditHandle","daysLeft","counter","list","map","key","onDragOver","onDrop","push","currentIdx","indexOf","splice","b","dropCardHandle","onBlur","newName","innerText","saveBoard","contentEditable","delBoard","class","aria-hidden","item","draggable","onDragStart","dragStartHandler","onDragLeave","dragLeaveHandler","onDragEnd","dropIdx","dropHandler","onDoubleClick","newDescription","saveChange","padding","editItem","delItem","actualDate","newItem","length","addItem","desc","newBoard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ede835dd.chunk.js","sourcesContent":["import React from 'react';\n\nimport '../../App.css'\n\nexport default function Header() {\n    return (\n        <div className='header'>\n            <span className='logo'>Trello</span>\n            <div className='btn-save width'>Log In</div>\n        </div>\n    )\n}","import React from 'react'\n\n function AddBoardButton(props) {\n    return (\n        <div className='add-board'>\n            <div \n                className='btn'\n                onClick={(e) => props.onboardAdd()}\n            >\n                 + add board   \n            </div>\n        </div>\n    )\n}\n\nexport default AddBoardButton;","import React,{useState} from 'react'\nimport moment from 'moment';\nimport DatePicker from 'react-datepicker'\n\nimport '../../App.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nexport default function EditField(props) {\n    \n    const {boardId, idx} = props.board;\n    const {cardDescription, date} = props.data[boardId - 1].items[idx]\n    const [startDate, setStartDate] = useState(new Date(date))\n    const [newText, setNewText] = useState(cardDescription)\n    let color;\n    function valid (date) {\n        let deadline = moment(date,'MM/DD/YYYY') //дата яка приходить у змінній\n        let today = moment().startOf('day')    // сьогодні\n        console.log('порівнюємо сьогодні',today.format('L'), ' і дедлайн:',deadline.format('L'),'результат:',today.diff(deadline,'day') );\n        if (today.diff(deadline,'day') === 0) {\n            color = 'orange'\n        }else if(today.diff(deadline,'day') === -1) {\n            color = 'yellow'\n        }else if(today.diff(deadline,'day') > 0 ){\n            color = 'red'\n        }else {\n            color = 'blue'    \n        }\n    }    \n     valid(date)\n    return (\n        <div className='board'>\n            <div className='edit-section'>\n                <div className='edit-title'> Ми на Дошці {props.data[boardId - 1].title}</div> \n                <h3 className='h3'>Item editing...</h3>\n                <textarea \n                    type='textarea' \n                    value={newText} \n                    onChange={e =>setNewText(e.target.value)}\n                    className='editable-text' \n                />\n\n                <DatePicker \n                    selected={startDate} \n                    onChange={newDate => setStartDate(newDate)} \n                    minDate={new Date()}\n                    className={`date-picker ${color}`}\n                />\n                <div className='flex'>\n                    <div className='btn-cancel' onClick={()=> props.onCancel(false)}>Cancel</div>\n                    <div  className='btn-save' onClick={()=> props.onSave(newText,moment(startDate).format('L'),boardId - 1,idx,false)}>Save</div>\n                </div>\n            </div>\n            \n            \n        </div>\n    )\n}","import React, { useState } from 'react';\nimport moment from 'moment';\nimport AddBoardButton from '../AddBoardButton/AddBoardButton';\nimport EditField from '../EditField/EditField';\n\n\nimport '../../App.css';\n\n\nconst Board = () => {\nconst [boards, setBoards] = useState([\n    { id: 1, title: 'Заплановано', items: [{ id: 1, cardDescription: 'Створити репозиторій для тестового', date: '12/26/2020',priority: '' }, { id: 2, cardDescription: 'Створити початковий проект', date: '12/25/2020',priority: '' }, { id: 3, cardDescription: 'Написати структуру проекту', date: '12/28/2020',priority: '' }] },\n    { id: 2, title: 'В роботі', items: [{ id: 1, cardDescription: 'Перевірити тестове завдання', date: '12/28/2020',priority: '' }, { id: 2, cardDescription: 'проходження курсів', date: '12/28/2020',priority: '' }, { id: 3, cardDescription: 'Стоврити планувальник витрат', date: '12/28/2020',priority: '' }] },\n    { id: 3, title: 'Виконано', items: [{ id: 1, cardDescription: 'Тестове завдання туду лист', date: '01/28/2021',priority: '' }, { id: 1, cardDescription: 'створити додаток по мотивам Зоряних війн', date: '12/27/2020',priority: '' }] }\n    ])\nconst [currentBoard, setCurrentBoard] = useState(null)\nconst [currentItem, setCurrentItem] = useState(null)\nconst [editElement, setEditElement] = useState(false)\nconst [edit, setEdit] = useState(false)\nconst [editInfo, setEditInfo] = useState({ boardId: null, idx: null})\nlet color;\n\n\n  \n\n  function dragOverHandler(e) {\n    e.preventDefault()\n    if (e.target.className === 'item') {\n      e.target.style.boxShadow = '0 0 15px rgba(0,0,0,0.8)';\n      e.target.style.background = 'yellow'\n    }\n  }\n  function dragStartHandler(e, board, item) {\n    setCurrentBoard(board);\n    setCurrentItem(item);\n  }\n  function dragLeaveHandler(e) {\n    e.target.style.boxShadow = 'none';\n    e.target.style.background = 'lightgrey';\n  }\n  function dragEndHandler(e) {\n\n  }\n  function dropHandler(e, board, item) {\n    e.preventDefault()\n    e.target.style.boxShadow = 'none';\n    e.target.style.background = 'lightgrey';\n    const currentIdx = currentBoard.items.indexOf(currentItem)\n    currentBoard.items.splice(currentIdx, 1)\n    const dropIdx = board.items.indexOf(item)\n    board.items.splice(dropIdx + 1, 0, currentItem)\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board\n      }\n      if (b.id === currentBoard.id) {\n        return currentBoard\n      }\n      return b\n    }))\n  }\n  function dropCardHandle(e, board) {\n    e.preventDefault()\n    board.items.push(currentItem)\n    const currentIdx = currentBoard.items.indexOf(currentItem)\n     currentBoard.items.splice(currentIdx, 1)\n    setBoards(boards.map(b => {\n      if (b.id === board.id) {\n        return board\n      }\n      if (b.id === currentBoard.id) {\n        return currentBoard\n      }\n     return b\n     }))\n  }\n  function addItem(e, board) {\n    const actualDate = moment();   \n    const newItem = {\n      id:board.items.length + 1,\n      cardDescription: 'Edit me',\n      date: actualDate.format('L')\n    }\n    board.items.push(newItem);\n    setBoards(boards.map(b => {\n        return b\n    }))\n    \n  }\n  function EditHandle(e) {\n    setEditElement(true)\n    e.target.style.background='lightgrey';\n    e.target.style.color='black';\n  }\n  function saveChange (e, board, item){\n    const newDescription = e.target.innerText\n    item.cardDescription = newDescription\n    e.target.style.color='#39c';\n    setEditElement(false)\n  }\n  function saveBoard (e, board){\n    const newName = e.target.innerText;\n     board.title = newName;\n     e.target.style.background='#39c';\n     e.target.style.color='white';\n    setEditElement(false)\n  }\n  function boardAdd(e,board) {\n    const newBoard = {id: boards.length + 1, title: 'new Board', items:[]} \n    boards.push(newBoard)\n    setBoards(boards.map(b => {\n     return b\n    }))\n  }\n  function delItem(e, board, item) {\n    const idx = board.items.indexOf(item);\n    board.items.splice(idx, 1);\n    setBoards(boards.map(b => {\n      return b\n     }))       \n  }\n  function editItem (e, board, item) {\n    const idx = board.items.indexOf(item);\n    setEditInfo({\n        boardId: board.id,\n        idx: idx\n    })\n    setEdit(true)\n\n  }\n  function delBoard(e, board) {\n     const idx = boards.indexOf(board);\n     boards.splice(idx, 1);\n    setBoards(boards.map(b => {\n      return b\n     }))       \n  }\n  function cancel (value) {\n      setEdit(value)\n      setBoards(boards.map(b => {\n        return b\n    }))\n  }\n  function save(desc,date,boardId,idx, value) {    \n       boards[boardId].items[idx].cardDescription = desc\n       boards[boardId].items[idx].date = date\n       setEdit(value)\n      setBoards(boards.map(b => {\n       return b\n       }))\n  }\n  function valid (date) {\n    const deadline = moment(date,'MM/DD/YYYY') \n    const today = moment().startOf('day')    \n    if (today.diff(deadline,'day') === 0) {\n        color = 'orange'\n    }else if(today.diff(deadline,'day') === -1) {\n        color = 'yellow'\n    }else if(today.diff(deadline,'day') > 0 ){\n        color = 'red'\n    }else {\n        color = 'blue'    \n    }\n} \nfunction daysLeft(date) {     \nconst counter = moment().startOf('day').diff(moment(date,'MM/DD/YYYY'),'day') \nif (counter > 0) {\n    color = 'blue'\n    return 0 \n    \n}else {\n    return -counter\n}\n}\n\n  const list = boards.map((board, key) =>\n        <div className='board'\n        key={key}\n          onDragOver={(e) => dragOverHandler(e)}\n          onDrop={(e) => dropCardHandle(e, board)}\n        >\n          <div className='board-section'>\n            <div className='flex'>\n                <div className='board-title'\n                    onClick={(e) => EditHandle(e)} \n                    onBlur={(e) => saveBoard(e, board)}\n                    contentEditable={editElement}\n                >\n                    {board.title}\n                </div>\n                <div className='btn-del'\n                    onClick={(e) => delBoard(e, board)}\n                >\n                    <i class=\"fa fa-trash fa-lg\" aria-hidden=\"true\"></i>\n                <div className='line'></div>\n                </div> \n            </div> \n            \n            {board.items.map((item, key) =>\n              <div className='item'\n              key={key}\n                draggable='true'\n                onDragOver={(e) => dragOverHandler(e)}\n                onDragStart={(e) => dragStartHandler(e, board, item)}\n                onDragLeave={(e) => dragLeaveHandler(e)}\n                onDragEnd={(e) => dragEndHandler(e)}\n                onDrop={(e) => dropHandler(e, board, item)}\n                onDoubleClick={(e) => EditHandle(e)}\n                onBlur={(e) => saveChange(e, board, item)}\n              > \n                <span   className='text' \n                      contentEditable={editElement}\n                >\n                  {item.cardDescription}\n                </span>\n                <div className='add-info'>\n\n                  <div>Deadline: \n                      {valid(item.date)}\n                      <span className={color} >\n                            {item.date} \n                      </span>\n                  </div>\n                  <div className='counter'>Days left:  \n                      {valid(item.date)}\n                      <span style={{padding: '0 2px'}}>\n                            {daysLeft(item.date)} \n                      </span>\n                  </div>\n                  \n                </div>\n                <div className='btn-group'>\n                  <div className='edit-btn'\n                   onClick={(e) => editItem(e, board, item)}\n                  >\n                      Edit\n                  </div>\n                  <div \n                    className='edit-btn del-btn'\n                    onClick={(e) => delItem(e, board, item)}\n                  >\n                    Delete\n                  </div>\n                </div>\n                \n              </div>\n\n            )}\n          </div>\n          <div className='btn m-t-70'\n            onClick={(e) => addItem(e, board)}\n          >+ add item</div>\n        </div>\n      )\n  return (\n    <div>\n      <div className='App'>\n       {edit ?  <EditField data={boards} onSave={save} onCancel={cancel} board={editInfo} /> : list} \n       {edit ? null : <AddBoardButton  onboardAdd={boardAdd} />} \n      </div>\n      \n    </div>\n\n  );\n};\n\nexport default Board;","import React from 'react';\nimport Header from './Components/Header/Header';\nimport Board from './Components/Board/Board';\n\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Board />     \n      \n    </div>\n\n  );\n};\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}